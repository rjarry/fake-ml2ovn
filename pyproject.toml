[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "fake-ml2ovn"
dynamic = ["version"]
authors = [
	{ name="Robin Jarry", email="rjarry@redhat.com" },
]
description = "Populate an OVN northbound with neutron-like commands"
readme = "README.md"
license = { file = "LICENSE" }
requires-python = ">=3.7"
classifiers = [
	"Programming Language :: Python :: 3",
	"License :: OSI Approved :: BSD 3-Clause License",
	"Operating System :: OS Independent",
]
dependencies = [
	"neutron",
]

[project.urls]
Homepage = "https://git.sr.ht/~rjarry/fake-ml2ovn"

[project.scripts]
fake-ml2ovn = "fake_ml2ovn.__main__:main"

[tool.isort]
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
line_length = 88
lines_after_imports = 2
force_sort_within_sections = true
known_first_party = "fake_ml2ovn"
default_section = "THIRDPARTY"
no_lines_before = "LOCALFOLDER"

[tool.pylint."messages control"]
enable = ["all"]
disable = [
	"locally-disabled",
	"file-ignored",
	"suppressed-message",
	"line-too-long",
	"wrong-import-order",
	"import-outside-toplevel",
	"missing-module-docstring",
	"missing-class-docstring",
	"missing-function-docstring",
	"cyclic-import",
	"duplicate-code",
	"broad-exception-caught",
	"fixme",
	"unused-argument",
	"unnecessary-pass",
	"invalid-overridden-method",
]

[tool.pylint.reports]
msg-template = "{path}:{line} {msg} [{symbol}]"
output-format = "text"
score = false

[tool.pylint.refactoring]
max-nested-blocks = 5
never-returning-functions = ["sys.exit", "argparse.parse_error"]

[tool.pylint.variables]
init-import = true

[tool.pylint.basic]
argument-naming-style = "any"
attr-naming-style = "snake_case"
class-attribute-naming-style = "any"
class-const-naming-style = "UPPER_CASE"
class-naming-style = "PascalCase"
const-naming-style = "UPPER_CASE"
function-naming-style = "snake_case"
inlinevar-naming-style = "any"
method-naming-style = "snake_case"
module-naming-style = "snake_case"
variable-naming-style = "any"

[tool.pylint.format]
expected-line-ending-format = "LF"

[tool.pylint.design]
max-args = 7
max-attributes = 10
max-bool-expr = 5
max-branches = 20
max-locals = 16
max-parents = 10
max-public-methods = 20
max-returns = 7
max-statements = 50
